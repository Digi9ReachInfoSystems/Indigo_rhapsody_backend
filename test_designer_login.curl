# Test Designer Login Endpoint
# This endpoint allows designers to login with email/password and get access tokens

# Base URL - Update this to match your server URL
BASE_URL="http://localhost:3000"

echo "üß™ Testing Designer Login Endpoint"
echo "=================================="
echo ""

# Test 1: Successful designer login
echo "‚úÖ Test 1: Successful designer login"
echo "-----------------------------------"
curl -X POST "${BASE_URL}/api/users/designer-login" \
  -H "Content-Type: application/json" \
  -d '{
    "email": "designer@example.com",
    "password": "designer123"
  }' \
  -w "\n\nHTTP Status: %{http_code}\nResponse Time: %{time_total}s\n" \
  -s
echo ""

# Test 2: Login with invalid email
echo "‚úÖ Test 2: Login with invalid email"
echo "----------------------------------"
curl -X POST "${BASE_URL}/api/users/designer-login" \
  -H "Content-Type: application/json" \
  -d '{
    "email": "nonexistent@example.com",
    "password": "password123"
  }' \
  -w "\n\nHTTP Status: %{http_code}\nResponse Time: %{time_total}s\n" \
  -s
echo ""

# Test 3: Login with invalid password
echo "‚úÖ Test 3: Login with invalid password"
echo "-------------------------------------"
curl -X POST "${BASE_URL}/api/users/designer-login" \
  -H "Content-Type: application/json" \
  -d '{
    "email": "designer@example.com",
    "password": "wrongpassword"
  }' \
  -w "\n\nHTTP Status: %{http_code}\nResponse Time: %{time_total}s\n" \
  -s
echo ""

# Test 4: Login with non-designer user
echo "‚úÖ Test 4: Login with non-designer user"
echo "--------------------------------------"
curl -X POST "${BASE_URL}/api/users/designer-login" \
  -H "Content-Type: application/json" \
  -d '{
    "email": "user@example.com",
    "password": "user123"
  }' \
  -w "\n\nHTTP Status: %{http_code}\nResponse Time: %{time_total}s\n" \
  -s
echo ""

# Test 5: Login with unapproved designer
echo "‚úÖ Test 5: Login with unapproved designer"
echo "----------------------------------------"
curl -X POST "${BASE_URL}/api/users/designer-login" \
  -H "Content-Type: application/json" \
  -d '{
    "email": "unapproved@example.com",
    "password": "password123"
  }' \
  -w "\n\nHTTP Status: %{http_code}\nResponse Time: %{time_total}s\n" \
  -s
echo ""

# Test 6: Login with missing email
echo "‚úÖ Test 6: Login with missing email"
echo "----------------------------------"
curl -X POST "${BASE_URL}/api/users/designer-login" \
  -H "Content-Type: application/json" \
  -d '{
    "password": "password123"
  }' \
  -w "\n\nHTTP Status: %{http_code}\nResponse Time: %{time_total}s\n" \
  -s
echo ""

# Test 7: Login with missing password
echo "‚úÖ Test 7: Login with missing password"
echo "-------------------------------------"
curl -X POST "${BASE_URL}/api/users/designer-login" \
  -H "Content-Type: application/json" \
  -d '{
    "email": "designer@example.com"
  }' \
  -w "\n\nHTTP Status: %{http_code}\nResponse Time: %{time_total}s\n" \
  -s
echo ""

# Test 8: Login with empty request body
echo "‚úÖ Test 8: Login with empty request body"
echo "---------------------------------------"
curl -X POST "${BASE_URL}/api/users/designer-login" \
  -H "Content-Type: application/json" \
  -d '{}' \
  -w "\n\nHTTP Status: %{http_code}\nResponse Time: %{time_total}s\n" \
  -s
echo ""

# Test 9: Login with user without password set
echo "‚úÖ Test 9: Login with user without password set"
echo "----------------------------------------------"
curl -X POST "${BASE_URL}/api/users/designer-login" \
  -H "Content-Type: application/json" \
  -d '{
    "email": "nopassword@example.com",
    "password": "password123"
  }' \
  -w "\n\nHTTP Status: %{http_code}\nResponse Time: %{time_total}s\n" \
  -s
echo ""

echo "üéØ Test Summary:"
echo "================"
echo "‚úÖ Test 1: Should return access token and designer data"
echo "‚úÖ Test 2: Should return invalid email/password error"
echo "‚úÖ Test 3: Should return invalid email/password error"
echo "‚úÖ Test 4: Should return access denied error"
echo "‚úÖ Test 5: Should return profile not approved error"
echo "‚úÖ Test 6: Should return validation error"
echo "‚úÖ Test 7: Should return validation error"
echo "‚úÖ Test 8: Should return validation error"
echo "‚úÖ Test 9: Should return invalid email/password error"
echo ""
echo "üìù Endpoint Details:"
echo "==================="
echo "‚Ä¢ POST /api/users/designer-login - Designer login with email/password"
echo ""
echo "üìä Request Body Parameters:"
echo "=========================="
echo "‚Ä¢ email (required): Designer's email address"
echo "‚Ä¢ password (required): Designer's password"
echo ""
echo "üìä Response Structure (Success):"
echo "==============================="
echo "‚Ä¢ success: Boolean indicating success"
echo "‚Ä¢ message: Response message"
echo "‚Ä¢ data.userId: User ID"
echo "‚Ä¢ data.designerId: Designer ID"
echo "‚Ä¢ data.is_approved: Approval status"
echo "‚Ä¢ data.accessToken: JWT access token (Bearer format)"
echo "‚Ä¢ data.refreshToken: JWT refresh token"
echo "‚Ä¢ data.user: User information"
echo "‚Ä¢ data.designer: Designer profile information"
echo ""
echo "üîí Authentication Rules:"
echo "======================="
echo "‚Ä¢ User must have role 'Designer'"
echo "‚Ä¢ User must have a password set"
echo "‚Ä¢ Password must match the stored hash"
echo "‚Ä¢ Designer profile must exist and be approved"
echo "‚Ä¢ Access token expires in 1 day (configurable)"
echo "‚Ä¢ Refresh token expires in 7 days"
echo ""
echo "üí° Usage Examples:"
echo "=================="
echo "‚Ä¢ Basic login: POST /api/users/designer-login"
echo "‚Ä¢ Use accessToken for authenticated requests"
echo "‚Ä¢ Use refreshToken to get new access token"
echo ""
echo "üìã Sample Request Body:"
echo "======================"
echo '{
  "email": "designer@example.com",
  "password": "designer123"
}'
echo ""
echo "üìã Sample Response (Success):"
echo "============================="
echo '{
  "success": true,
  "message": "Designer login successful",
  "data": {
    "userId": "507f1f77bcf86cd799439011",
    "designerId": "507f1f77bcf86cd799439012",
    "is_approved": true,
    "accessToken": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...",
    "refreshToken": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...",
    "user": {
      "id": "507f1f77bcf86cd799439011",
      "email": "designer@example.com",
      "displayName": "John Designer",
      "role": "Designer",
      "phoneNumber": "+919876543210"
    },
    "designer": {
      "id": "507f1f77bcf86cd799439012",
      "shortDescription": "Fashion designer",
      "about": "Passionate about sustainable fashion",
      "logoUrl": "https://example.com/logo.jpg",
      "backGroundImage": "https://example.com/bg.jpg",
      "pickup_location_name": "Studio_John Designer"
    }
  }
}'

# Test Designer Order Cancellation Endpoints
# This script tests the designer-specific order cancellation functionality

# Base URL - Update this to match your server URL
BASE_URL="http://localhost:3000"

# Designer authentication token - Update with a valid designer token
DESIGNER_TOKEN="your_designer_jwt_token_here"

echo "üß™ Testing Designer Order Cancellation Endpoints"
echo "================================================"
echo ""

# Test 1: Get cancellable orders for designer
echo "‚úÖ Test 1: Get cancellable orders for designer"
echo "----------------------------------------------"
curl -X GET "${BASE_URL}/api/orders/designer/cancellable-orders" \
  -H "Content-Type: application/json" \
  -H "Authorization: Bearer ${DESIGNER_TOKEN}" \
  -w "\n\nHTTP Status: %{http_code}\nResponse Time: %{time_total}s\n" \
  -s
echo ""

# Test 2: Get cancellable orders with pagination
echo "‚úÖ Test 2: Get cancellable orders with pagination"
echo "------------------------------------------------"
curl -X GET "${BASE_URL}/api/orders/designer/cancellable-orders?page=1&limit=5" \
  -H "Content-Type: application/json" \
  -H "Authorization: Bearer ${DESIGNER_TOKEN}" \
  -w "\n\nHTTP Status: %{http_code}\nResponse Time: %{time_total}s\n" \
  -s
echo ""

# Test 3: Cancel order by designer (valid order)
echo "‚úÖ Test 3: Cancel order by designer (valid order)"
echo "------------------------------------------------"
curl -X POST "${BASE_URL}/api/orders/designer/cancel/ORD-1234567890" \
  -H "Content-Type: application/json" \
  -H "Authorization: Bearer ${DESIGNER_TOKEN}" \
  -d '{
    "reason": "Product out of stock"
  }' \
  -w "\n\nHTTP Status: %{http_code}\nResponse Time: %{time_total}s\n" \
  -s
echo ""

# Test 4: Cancel order without reason
echo "‚úÖ Test 4: Cancel order without reason"
echo "-------------------------------------"
curl -X POST "${BASE_URL}/api/orders/designer/cancel/ORD-1234567890" \
  -H "Content-Type: application/json" \
  -H "Authorization: Bearer ${DESIGNER_TOKEN}" \
  -d '{}' \
  -w "\n\nHTTP Status: %{http_code}\nResponse Time: %{time_total}s\n" \
  -s
echo ""

# Test 5: Cancel order with empty reason
echo "‚úÖ Test 5: Cancel order with empty reason"
echo "----------------------------------------"
curl -X POST "${BASE_URL}/api/orders/designer/cancel/ORD-1234567890" \
  -H "Content-Type: application/json" \
  -H "Authorization: Bearer ${DESIGNER_TOKEN}" \
  -d '{
    "reason": ""
  }' \
  -w "\n\nHTTP Status: %{http_code}\nResponse Time: %{time_total}s\n" \
  -s
echo ""

# Test 6: Cancel non-existent order
echo "‚úÖ Test 6: Cancel non-existent order"
echo "-----------------------------------"
curl -X POST "${BASE_URL}/api/orders/designer/cancel/ORD-9999999999" \
  -H "Content-Type: application/json" \
  -H "Authorization: Bearer ${DESIGNER_TOKEN}" \
  -d '{
    "reason": "Product out of stock"
  }' \
  -w "\n\nHTTP Status: %{http_code}\nResponse Time: %{time_total}s\n" \
  -s
echo ""

# Test 7: Cancel order without authentication
echo "‚úÖ Test 7: Cancel order without authentication"
echo "---------------------------------------------"
curl -X POST "${BASE_URL}/api/orders/designer/cancel/ORD-1234567890" \
  -H "Content-Type: application/json" \
  -d '{
    "reason": "Product out of stock"
  }' \
  -w "\n\nHTTP Status: %{http_code}\nResponse Time: %{time_total}s\n" \
  -s
echo ""

# Test 8: Cancel order with invalid token
echo "‚úÖ Test 8: Cancel order with invalid token"
echo "-----------------------------------------"
curl -X POST "${BASE_URL}/api/orders/designer/cancel/ORD-1234567890" \
  -H "Content-Type: application/json" \
  -H "Authorization: Bearer invalid_token" \
  -d '{
    "reason": "Product out of stock"
  }' \
  -w "\n\nHTTP Status: %{http_code}\nResponse Time: %{time_total}s\n" \
  -s
echo ""

# Test 9: Cancel order that doesn't belong to designer
echo "‚úÖ Test 9: Cancel order that doesn't belong to designer"
echo "------------------------------------------------------"
curl -X POST "${BASE_URL}/api/orders/designer/cancel/ORD-9876543210" \
  -H "Content-Type: application/json" \
  -H "Authorization: Bearer ${DESIGNER_TOKEN}" \
  -d '{
    "reason": "Product out of stock"
  }' \
  -w "\n\nHTTP Status: %{http_code}\nResponse Time: %{time_total}s\n" \
  -s
echo ""

# Test 10: Cancel order with different reasons
echo "‚úÖ Test 10: Cancel order with different reasons"
echo "----------------------------------------------"
curl -X POST "${BASE_URL}/api/orders/designer/cancel/ORD-1234567890" \
  -H "Content-Type: application/json" \
  -H "Authorization: Bearer ${DESIGNER_TOKEN}" \
  -d '{
    "reason": "Changed my mind"
  }' \
  -w "\n\nHTTP Status: %{http_code}\nResponse Time: %{time_total}s\n" \
  -s
echo ""

# Test 11: Get cancellation reasons
echo "‚úÖ Test 11: Get cancellation reasons"
echo "-----------------------------------"
curl -X GET "${BASE_URL}/api/orders/cancellation-reasons" \
  -H "Content-Type: application/json" \
  -w "\n\nHTTP Status: %{http_code}\nResponse Time: %{time_total}s\n" \
  -s
echo ""

echo "üéØ Test Summary:"
echo "================"
echo "‚úÖ Test 1: Should get cancellable orders for designer"
echo "‚úÖ Test 2: Should get cancellable orders with pagination"
echo "‚úÖ Test 3: Should cancel order by designer (valid order)"
echo "‚úÖ Test 4: Should return error for missing reason"
echo "‚úÖ Test 5: Should return error for empty reason"
echo "‚úÖ Test 6: Should return error for non-existent order"
echo "‚úÖ Test 7: Should return error for missing authentication"
echo "‚úÖ Test 8: Should return error for invalid token"
echo "‚úÖ Test 9: Should return error for order not belonging to designer"
echo "‚úÖ Test 10: Should cancel order with different reasons"
echo "‚úÖ Test 11: Should get cancellation reasons list"
echo ""

echo "üìù Endpoint Details:"
echo "==================="
echo "‚Ä¢ GET /api/orders/designer/cancellable-orders - Get cancellable orders for designer"
echo "‚Ä¢ POST /api/orders/designer/cancel/:orderId - Cancel order by designer"
echo "‚Ä¢ GET /api/orders/cancellation-reasons - Get cancellation reasons"
echo ""

echo "üìä URL Parameters:"
echo "=================="
echo "‚Ä¢ orderId (required): Valid order ID (e.g., ORD-1234567890)"
echo ""

echo "üìä Query Parameters (for cancellable orders):"
echo "============================================="
echo "‚Ä¢ page (optional): Page number, defaults to 1"
echo "‚Ä¢ limit (optional): Number of orders per page, defaults to 10"
echo ""

echo "üìä Request Body (for cancel order):"
echo "==================================="
echo "‚Ä¢ reason (required): Cancellation reason"
echo ""

echo "üìä Response Structure (Success - Cancel Order):"
echo "=============================================="
echo "‚Ä¢ success: Boolean indicating success"
echo "‚Ä¢ message: Success message"
echo "‚Ä¢ data: Order cancellation details"
echo "  - orderId: Order ID"
echo "  - status: Updated order status"
echo "  - cancelledAt: Cancellation timestamp"
echo "  - cancellationReason: Reason for cancellation"
echo "  - cancelledBy: Who cancelled (designer)"
echo "  - designerId: Designer ID"
echo "  - refundRequired: Whether refund is required"
echo "  - designerProductsCancelled: Number of designer products cancelled"
echo ""

echo "üìä Response Structure (Success - Get Cancellable Orders):"
echo "========================================================"
echo "‚Ä¢ success: Boolean indicating success"
echo "‚Ä¢ message: Success message"
echo "‚Ä¢ data: Orders data"
echo "  - orders: Array of cancellable orders"
echo "  - pagination: Pagination information"
echo "    - currentPage: Current page number"
echo "    - totalPages: Total number of pages"
echo "    - totalOrders: Total number of orders"
echo "    - hasNextPage: Whether there's a next page"
echo "    - hasPrevPage: Whether there's a previous page"
echo ""

echo "üîí Validation Rules:"
echo "==================="
echo "‚Ä¢ Designer must be authenticated"
echo "‚Ä¢ Designer must have Designer role"
echo "‚Ä¢ Order ID must be provided"
echo "‚Ä¢ Order must exist"
echo "‚Ä¢ Order must contain designer's products"
echo "‚Ä¢ Order status must be 'Order Placed' or 'Processing'"
echo "‚Ä¢ Payment status must not be 'Completed'"
echo "‚Ä¢ Cancellation reason is required"
echo ""

echo "üí° Usage Examples:"
echo "=================="
echo "‚Ä¢ Get cancellable orders: GET /api/orders/designer/cancellable-orders"
echo "‚Ä¢ Cancel order: POST /api/orders/designer/cancel/ORD-1234567890"
echo "‚Ä¢ Get reasons: GET /api/orders/cancellation-reasons"
echo ""

echo "üìã Sample Request URLs:"
echo "======================"
echo "‚Ä¢ Get cancellable orders: ${BASE_URL}/api/orders/designer/cancellable-orders"
echo "‚Ä¢ Cancel order: ${BASE_URL}/api/orders/designer/cancel/ORD-1234567890"
echo "‚Ä¢ Get reasons: ${BASE_URL}/api/orders/cancellation-reasons"
echo ""

echo "üìã Sample Request Body (Cancel Order):"
echo "====================================="
echo '{
  "reason": "Product out of stock"
}'
echo ""

echo "üìã Sample Response (Success - Cancel Order):"
echo "==========================================="
echo '{
  "success": true,
  "message": "Order cancelled successfully by designer",
  "data": {
    "orderId": "ORD123456",
    "status": "Cancelled",
    "cancelledAt": "2024-01-15T10:30:00.000Z",
    "cancellationReason": "Product out of stock",
    "cancelledBy": "designer",
    "designerId": "507f1f77bcf86cd799439011",
    "refundRequired": false,
    "designerProductsCancelled": 2
  }
}'
echo ""

echo "üìã Sample Response (Success - Get Cancellable Orders):"
echo "===================================================="
echo '{
  "success": true,
  "message": "Cancellable orders retrieved successfully",
  "data": {
    "orders": [
      {
        "_id": "507f1f77bcf86cd799439011",
        "orderId": "ORD123456",
        "status": "Order Placed",
        "amount": 1500,
        "userId": {
          "_id": "507f1f77bcf86cd799439012",
          "displayName": "John Doe",
          "email": "john@example.com"
        },
        "products": [
          {
            "productId": {
              "_id": "507f1f77bcf86cd799439013",
              "productName": "Designer Dress",
              "sku": "DD001"
            },
            "quantity": 1,
            "price": 1500,
            "designerRef": "507f1f77bcf86cd799439011"
          }
        ],
        "totalDesignerProducts": 1,
        "totalOrderProducts": 1
      }
    ],
    "pagination": {
      "currentPage": 1,
      "totalPages": 3,
      "totalOrders": 25,
      "hasNextPage": true,
      "hasPrevPage": false
    }
  }
}'
echo ""

echo "üìã Sample Response (Error - Order Not Found):"
echo "============================================"
echo '{
  "success": false,
  "message": "Order not found"
}'
echo ""

echo "üìã Sample Response (Error - No Designer Products):"
echo "================================================="
echo '{
  "success": false,
  "message": "You can only cancel orders that contain your products"
}'
echo ""

echo "üìã Sample Response (Error - Missing Reason):"
echo "==========================================="
echo '{
  "success": false,
  "message": "Cancellation reason is required"
}'
echo ""
